// --------------------------------------------------
// #Layout
// --------------------------------------------------

// Just a basic css grid as a starter point
.grid {
  margin: 0px auto; //centered grid
  display: grid;

  // grid-template-columns:
  //   [full-start] minmax(2rem, 1fr)
  //   [center-start] repeat(4, [col-start] minmax(min-content, 30rem) [col-end])
  //   [center-end] minmax(2rem, 1fr) [full-end];

  // 4 Grid
  // grid-template-columns:
  //   [margin-start] minmax(2rem, 1fr)
  //   [center-start] minmax(20rem, 20rem) 2rem minmax(20rem, 20rem) 2rem
  //   minmax(20rem, 20rem) 2rem minmax(20rem, 20rem)
  //   // [center-start] repeat(4, [col-start] minmax(min-content, 30rem) [col-end])
  //   [center-end] minmax(2rem, 1fr) [full-end];

// 4 Grid 02 Test
  grid-template-columns:
    minmax(2rem, 1fr)
    [col1]minmax(20rem, 20rem)
    [gap1]2rem
    [col2]minmax(20rem, 20rem)
    [gap2]2rem
    [col3]minmax(20rem, 20rem)
    [gap3]2rem
    [col4]minmax(20rem, 20rem)
    minmax(2rem, 1fr);

  // grid-template-rows: repeat(8, 20vh);
  grid-template-rows:
    [row1]13rem 2rem
    [row2]13rem 2rem
    [row3]13rem 2rem
    [row4]13rem 2rem
    [row5]13rem 2rem
    [row6]13rem 2rem
    [row7]13rem 2rem
    [row8]13rem
    [footer]8rem;

  margin-top: 8rem;
  margin-bottom: 10rem;

  // @include respond(four) {
  // }
}



// Row 01 cells position
// --------------------------------------------------
.row1-col1 {
  grid-row: 1 / span 1;
  grid-column: col1 / span 1;
}
.row1-col2-g {
  grid-row: 1 / span 1;
  grid-column: gap1 / span 1;
}
.row1-col3 {
  grid-row: 1 / span 1;
  grid-column: col2 / span 1;
}
.row1-col4-g {
  grid-row: 1 / span 1;
  grid-column: gap2 / span 1;
}
.row1-col5 {
  grid-row: 1 / span 1;
  grid-column: col3 / span 1;
}
.row1-col6-g {
  grid-row: 1 / span 1;
  grid-column: gap3 / span 1;
}
.row1-col7 {
  grid-row: 1 / span 1;
  grid-column: col4 / span 1;
}

// Row 02 cells position / gap
// --------------------------------------------------
.row2-g-col1 {
  grid-row: 2 / span 1;
  grid-column: col1 / span 1;
}
.row2-g-col2-g {
  grid-row: 2 / span 1;
  grid-column: gap1 / span 1;
}
.row2-g-col3 {
  grid-row: 2 / span 1;
  grid-column: col2 / span 1;
}
.row2-g-col4-g {
  grid-row: 2 / span 1;
  grid-column: gap2 / span 1;
}
.row2-g-col5 {
  grid-row: 2 / span 1;
  grid-column: col3 / span 1;
}
.row2-g-col6-g {
  grid-row: 2 / span 1;
  grid-column: gap3 / span 1;
}
.row2-g-col7 {
  grid-row: 2 / span 1;
  grid-column: col4 / span 1;
}

// Row 03 cells position
// --------------------------------------------------
.row3-col1 {
  grid-row: 3 / span 1;
  grid-column: col1 / span 1;
}
.row3-col2-g {
  grid-row: 3 / span 1;
  grid-column: gap1 / span 1;
}
.row3-col3 {
  grid-row: 3 / span 1;
  grid-column: col2 / span 1;
}
.row3-col4-g {
  grid-row: 3 / span 1;
  grid-column: gap2 / span 1;
}
.row3-col5 {
  grid-row: 3 / span 1;
  grid-column: col3 / span 1;
}
.row3-col6-g {
  grid-row: 3 / span 1;
  grid-column: gap3 / span 1;
}
.row3-col7 {
  grid-row: 3 / span 1;
  grid-column: col4 / span 1;
}

// Row 04 cells position / gap
// --------------------------------------------------
.row4-g-col1 {
  grid-row: 4 / span 1;
  grid-column: col1 / span 1;
}
.row4-g-col2-g {
  grid-row: 4 / span 1;
  grid-column: gap1 / span 1;
}
.row4-g-col3 {
  grid-row: 4 / span 1;
  grid-column: col2 / span 1;
}
.row4-g-col4-g {
  grid-row: 4 / span 1;
  grid-column: gap2 / span 1;
}
.row4-g-col5 {
  grid-row: 4 / span 1;
  grid-column: col3 / span 1;
}
.row4-g-col6-g {
  grid-row: 4 / span 1;
  grid-column: gap3 / span 1;
}
.row4-g-col7 {
  grid-row: 4 / span 1;
  grid-column: col4 / span 1;
}

// Row 05 cells position
// --------------------------------------------------
.row5-col1 {
  grid-row: 5 / span 1;
  grid-column: col1 / span 1;
}
.row5-col2-g {
  grid-row: 5 / span 1;
  grid-column: gap1 / span 1;
}
.row5-col3 {
  grid-row: 5 / span 1;
  grid-column: col2 / span 1;
}
.row5-col4-g {
  grid-row: 5 / span 1;
  grid-column: gap2 / span 1;
}
.row5-col5 {
  grid-row: 5 / span 1;
  grid-column: col3 / span 1;
}
.row5-col6-g {
  grid-row: 5 / span 1;
  grid-column: gap3 / span 1;
}
.row5-col7 {
  grid-row: 5 / span 1;
  grid-column: col4 / span 1;
}

// Row 06 cells position / gap
// --------------------------------------------------
.row6-g-col1 {
  grid-row: 6 / span 1;
  grid-column: col1 / span 1;
}
.row6-g-col2-g {
  grid-row: 6 / span 1;
  grid-column: gap1 / span 1;
}
.row6-g-col3 {
  grid-row: 6 / span 1;
  grid-column: col2 / span 1;
}
.row6-g-col4-g {
  grid-row: 6 / span 1;
  grid-column: gap2 / span 1;
}
.row6-g-col5 {
  grid-row: 6 / span 1;
  grid-column: col3 / span 1;
}
.row6-g-col6-g {
  grid-row: 6 / span 1;
  grid-column: gap3 / span 1;
}
.row6-g-col7 {
  grid-row: 6 / span 1;
  grid-column: col4 / span 1;
}

// Row 07 cells position
// --------------------------------------------------
.row7-col1 {
  grid-row: 7 / span 1;
  grid-column: col1 / span 1;
}
.row7-col2-g {
  grid-row: 7 / span 1;
  grid-column: gap1 / span 1;
}
.row7-col3 {
  grid-row: 7 / span 1;
  grid-column: col2 / span 1;
}
.row7-col4-g {
  grid-row: 7 / span 1;
  grid-column: gap2 / span 1;
}
.row7-col5 {
  grid-row: 7 / span 1;
  grid-column: col3 / span 1;
}
.row7-col6-g {
  grid-row: 7 / span 1;
  grid-column: gap3 / span 1;
}
.row7-col7 {
  grid-row: 7 / span 1;
  grid-column: col4 / span 1;
}

// Row 08 cells position / gap
// --------------------------------------------------
.row8-g-col1 {
  grid-row: 8 / span 1;
  grid-column: col1 / span 1;
}
.row8-g-col2-g {
  grid-row: 8 / span 1;
  grid-column: gap1 / span 1;
}
.row8-g-col3 {
  grid-row: 8 / span 1;
  grid-column: col2 / span 1;
}
.row8-g-col4-g {
  grid-row: 8 / span 1;
  grid-column: gap2 / span 1;
}
.row8-g-col5 {
  grid-row: 8 / span 1;
  grid-column: col3 / span 1;
}
.row8-g-col6-g {
  grid-row: 8 / span 1;
  grid-column: gap3 / span 1;
}
.row8-g-col7 {
  grid-row: 8 / span 1;
  grid-column: col4 / span 1;
}

// Row 09 cells position
// --------------------------------------------------
.row9-col1 {
  grid-row: 9 / span 1;
  grid-column: col1 / span 1;
}
.row9-col2-g {
  grid-row: 9 / span 1;
  grid-column: gap1 / span 1;
}
.row9-col3 {
  grid-row: 9 / span 1;
  grid-column: col2 / span 1;
}
.row9-col4-g {
  grid-row: 9 / span 1;
  grid-column: gap2 / span 1;
}
.row9-col5 {
  grid-row: 9 / span 1;
  grid-column: col3 / span 1;
}
.row9-col6-g {
  grid-row: 9 / span 1;
  grid-column: gap3 / span 1;
}
.row9-col7 {
  grid-row: 9 / span 1;
  grid-column: col4 / span 1;
}

// Row 10 cells position / gap
// --------------------------------------------------
.row10-g-col1 {
  grid-row: 10 / span 1;
  grid-column: col1 / span 1;
}
.row10-g-col2-g {
  grid-row: 10 / span 1;
  grid-column: gap1 / span 1;
}
.row10-g-col3 {
  grid-row: 10 / span 1;
  grid-column: col2 / span 1;
}
.row10-g-col4-g {
  grid-row: 10 / span 1;
  grid-column: gap2 / span 1;
}
.row10-g-col5 {
  grid-row: 10 / span 1;
  grid-column: col3 / span 1;
}
.row10-g-col6-g {
  grid-row: 10 / span 1;
  grid-column: gap3 / span 1;
}
.row10-g-col7 {
  grid-row: 10 / span 1;
  grid-column: col4 / span 1;
}

// Row 11 cells position
// --------------------------------------------------
.row11-col1 {
  grid-row: 11 / span 1;
  grid-column: col1 / span 1;
}
.row11-col2-g {
  grid-row: 11 / span 1;
  grid-column: gap1 / span 1;
}
.row11-col3 {
  grid-row: 11 / span 1;
  grid-column: col2 / span 1;
}
.row11-col4-g {
  grid-row: 11 / span 1;
  grid-column: gap2 / span 1;
}
.row11-col5 {
  grid-row: 11 / span 1;
  grid-column: col3 / span 1;
}
.row11-col6-g {
  grid-row: 11 / span 1;
  grid-column: gap3 / span 1;
}
.row11-col7 {
  grid-row: 11 / span 1;
  grid-column: col4 / span 1;
}

// Row 12 cells position / gap
// --------------------------------------------------
.row12-g-col1 {
  grid-row: 12 / span 1;
  grid-column: col1 / span 1;
}
.row12-g-col2-g {
  grid-row: 12 / span 1;
  grid-column: gap1 / span 1;
}
.row12-g-col3 {
  grid-row: 12 / span 1;
  grid-column: col2 / span 1;
}
.row12-g-col4-g {
  grid-row: 12 / span 1;
  grid-column: gap2 / span 1;
}
.row12-g-col5{
  grid-row: 12 / span 1;
  grid-column: col3 / span 1;
}
.row12-g-col6-g {
  grid-row: 12 / span 1;
  grid-column: gap3 / span 1;
}
.row12-g-col7 {
  grid-row: 12 / span 1;
  grid-column: col4 / span 1;
}

// Row 13 cells position
// --------------------------------------------------
.row13-col1 {
  grid-row: 13 / span 1;
  grid-column: col1 / span 1;
}
.row13-col2-g {
  grid-row: 13 / span 1;
  grid-column: gap1 / span 1;
}
.row13-col3 {
  grid-row: 13 / span 1;
  grid-column: col2 / span 1;
}
.row13-col4-g {
  grid-row: 13 / span 1;
  grid-column: gap2 / span 1;
}
.row13-col5 {
  grid-row: 13 / span 1;
  grid-column: col3 / span 1;
}
.row13-col6-g {
  grid-row: 13 / span 1;
  grid-column: gap3 / span 1;
}
.row13-col7 {
  grid-row: 13 / span 1;
  grid-column: col4 / span 1;
}

// Row 14 cells position / gap
// --------------------------------------------------
.row14-g-col1 {
  grid-row: 14 / span 1;
  grid-column: col1 / span 1;
}
.row14-g-col2-g {
  grid-row: 14 / span 1;
  grid-column: gap1 / span 1;
}
.row14-g-col3 {
  grid-row: 14 / span 1;
  grid-column: col2 / span 1;
}
.row14-g-col4-g {
  grid-row: 14 / span 1;
  grid-column: gap2 / span 1;
}
.row14-g-col5{
  grid-row: 14 / span 1;
  grid-column: col3 / span 1;
}
.row14-g-col6-g {
  grid-row: 14 / span 1;
  grid-column: gap3 / span 1;
}
.row14-g-col7 {
  grid-row: 14 / span 1;
  grid-column: col4 / span 1;
}

// Row 15 cells position
// --------------------------------------------------
.row15-col1 {
  grid-row: 15 / span 1;
  grid-column: col1 / span 1;
}
.row15-col2-g {
  grid-row: 15 / span 1;
  grid-column: gap1 / span 1;
}
.row15-col3 {
  grid-row: 15 / span 1;
  grid-column: col2 / span 1;
}
.row15-col4-g {
  grid-row: 15 / span 1;
  grid-column: gap2 / span 1;
}
.row15-col5 {
  grid-row: 15 / span 1;
  grid-column: col3 / span 1;
}
.row15-col6-g {
  grid-row: 15 / span 1;
  grid-column: gap3 / span 1;
}
.row15-col7 {
  grid-row: 15 / span 1;
  grid-column: col4 / span 1;
}
