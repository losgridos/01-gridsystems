// --------------------------------------------------
// Cells of the Grid
// --------------------------------------------------
// In CSS Grids, every cell of the grid needs to be an element to be styled.
// Each cell is an empty div with the class that signals its place in the grid
// with the properties grid-row and grid-column.
//
// The cells with the contents take place in the same grid (you can put more
// than one element in the same cell) but with a 1000 z-index.
// The text elements classes are storage in components/text-cell
//
// each cell is divided into row / row-gap and column / column-gap
// -g signals a gap
// --------------------------------------------------

// Row 01 cells position
// --------------------------------------------------
.row1-col1 {
  grid-row: 1 / span 1;
  grid-column: col1 / span 1;
}
.row1-col2-g {
  grid-row: 1 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row1-col3 {
  grid-row: 1 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row1-col4-g {
  grid-row: 1 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row1-col5 {
  grid-row: 1 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row1-col6-g {
  grid-row: 1 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row1-col7 {
  grid-row: 1 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 02 cells position / gap
// --------------------------------------------------
.row2-g-col1 {
  grid-row: 2 / span 1;
  grid-column: col1 / span 1;
}
.row2-g-col2-g {
  grid-row: 2 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row2-g-col3 {
  grid-row: 2 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row2-g-col4-g {
  grid-row: 2 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row2-g-col5 {
  grid-row: 2 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row2-g-col6-g {
  grid-row: 2 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row2-g-col7 {
  grid-row: 2 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 03 cells position
// --------------------------------------------------
.row3-col1 {
  grid-row: 3 / span 1;
  grid-column: col1 / span 1;
}
.row3-col2-g {
  grid-row: 3 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row3-col3 {
  grid-row: 3 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row3-col4-g {
  grid-row: 3 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row3-col5 {
  grid-row: 3 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row3-col6-g {
  grid-row: 3 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row3-col7 {
  grid-row: 3 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 04 cells position / gap
// --------------------------------------------------
.row4-g-col1 {
  grid-row: 4 / span 1;
  grid-column: col1 / span 1;
}
.row4-g-col2-g {
  grid-row: 4 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row4-g-col3 {
  grid-row: 4 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row4-g-col4-g {
  grid-row: 4 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row4-g-col5 {
  grid-row: 4 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row4-g-col6-g {
  grid-row: 4 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row4-g-col7 {
  grid-row: 4 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 05 cells position
// --------------------------------------------------
.row5-col1 {
  grid-row: 5 / span 1;
  grid-column: col1 / span 1;
}
.row5-col2-g {
  grid-row: 5 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row5-col3 {
  grid-row: 5 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row5-col4-g {
  grid-row: 5 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row5-col5 {
  grid-row: 5 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row5-col6-g {
  grid-row: 5 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row5-col7 {
  grid-row: 5 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 06 cells position / gap
// --------------------------------------------------
.row6-g-col1 {
  grid-row: 6 / span 1;
  grid-column: col1 / span 1;
}
.row6-g-col2-g {
  grid-row: 6 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row6-g-col3 {
  grid-row: 6 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row6-g-col4-g {
  grid-row: 6 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row6-g-col5 {
  grid-row: 6 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row6-g-col6-g {
  grid-row: 6 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row6-g-col7 {
  grid-row: 6 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 07 cells position
// --------------------------------------------------
.row7-col1 {
  grid-row: 7 / span 1;
  grid-column: col1 / span 1;
}
.row7-col2-g {
  grid-row: 7 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row7-col3 {
  grid-row: 7 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row7-col4-g {
  grid-row: 7 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row7-col5 {
  grid-row: 7 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row7-col6-g {
  grid-row: 7 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row7-col7 {
  grid-row: 7 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 08 cells position / gap
// --------------------------------------------------
.row8-g-col1 {
  grid-row: 8 / span 1;
  grid-column: col1 / span 1;
}
.row8-g-col2-g {
  grid-row: 8 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row8-g-col3 {
  grid-row: 8 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row8-g-col4-g {
  grid-row: 8 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row8-g-col5 {
  grid-row: 8 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row8-g-col6-g {
  grid-row: 8 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row8-g-col7 {
  grid-row: 8 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 09 cells position
// --------------------------------------------------
.row9-col1 {
  grid-row: 9 / span 1;
  grid-column: col1 / span 1;
}
.row9-col2-g {
  grid-row: 9 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row9-col3 {
  grid-row: 9 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row9-col4-g {
  grid-row: 9 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row9-col5 {
  grid-row: 9 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row9-col6-g {
  grid-row: 9 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row9-col7 {
  grid-row: 9 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 10 cells position / gap
// --------------------------------------------------
.row10-g-col1 {
  grid-row: 10 / span 1;
  grid-column: col1 / span 1;
}
.row10-g-col2-g {
  grid-row: 10 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row10-g-col3 {
  grid-row: 10 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row10-g-col4-g {
  grid-row: 10 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row10-g-col5 {
  grid-row: 10 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row10-g-col6-g {
  grid-row: 10 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row10-g-col7 {
  grid-row: 10 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 11 cells position
// --------------------------------------------------
.row11-col1 {
  grid-row: 11 / span 1;
  grid-column: col1 / span 1;
}
.row11-col2-g {
  grid-row: 11 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row11-col3 {
  grid-row: 11 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row11-col4-g {
  grid-row: 11 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row11-col5 {
  grid-row: 11 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row11-col6-g {
  grid-row: 11 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row11-col7 {
  grid-row: 11 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 12 cells position / gap
// --------------------------------------------------
.row12-g-col1 {
  grid-row: 12 / span 1;
  grid-column: col1 / span 1;
}
.row12-g-col2-g {
  grid-row: 12 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row12-g-col3 {
  grid-row: 12 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row12-g-col4-g {
  grid-row: 12 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row12-g-col5{
  grid-row: 12 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row12-g-col6-g {
  grid-row: 12 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row12-g-col7 {
  grid-row: 12 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 13 cells position
// --------------------------------------------------
.row13-col1 {
  grid-row: 13 / span 1;
  grid-column: col1 / span 1;
}
.row13-col2-g {
  grid-row: 13 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row13-col3 {
  grid-row: 13 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row13-col4-g {
  grid-row: 13 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row13-col5 {
  grid-row: 13 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row13-col6-g {
  grid-row: 13 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row13-col7 {
  grid-row: 13 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 14 cells position / gap
// --------------------------------------------------
.row14-g-col1 {
  grid-row: 14 / span 1;
  grid-column: col1 / span 1;
}
.row14-g-col2-g {
  grid-row: 14 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row14-g-col3 {
  grid-row: 14 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row14-g-col4-g {
  grid-row: 14 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row14-g-col5{
  grid-row: 14 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row14-g-col6-g {
  grid-row: 14 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row14-g-col7 {
  grid-row: 14 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}

// Row 15 cells position
// --------------------------------------------------
.row15-col1 {
  grid-row: 15 / span 1;
  grid-column: col1 / span 1;
}
.row15-col2-g {
  grid-row: 15 / span 1;
  grid-column: gap1 / span 1;
  @include respond(1col-grid) { display:none }
}
.row15-col3 {
  grid-row: 15 / span 1;
  grid-column: col2 / span 1;
  @include respond(1col-grid) { display:none }
}
.row15-col4-g {
  grid-row: 15 / span 1;
  grid-column: gap2 / span 1;
  @include respond(2col-grid) { display:none }
}
.row15-col5 {
  grid-row: 15 / span 1;
  grid-column: col3 / span 1;
  @include respond(2col-grid) { display:none }
}
.row15-col6-g {
  grid-row: 15 / span 1;
  grid-column: gap3 / span 1;
  @include respond(3col-grid) { display:none }
}
.row15-col7 {
  grid-row: 15 / span 1;
  grid-column: col4 / span 1;
  @include respond(3col-grid) { display:none }
}
